name: Devin統計日次更新

on:
  # schedule:
  #   # 毎日04:00 UTC (13:00 JST) に実行 - policy-pr-hubの更新後
  #   - cron: '0 4 * * *'
  workflow_dispatch:
    # 手動実行も可能

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DEVIN_API_TOKEN: ${{ secrets.DEVIN_API_TOKEN }}

jobs:
  generate-devin-stats:
    runs-on: ubuntu-latest
    
    steps:
    - name: リポジトリをチェックアウト
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: pr-dataリポジトリをチェックアウト
      uses: actions/checkout@v4
      with:
        repository: team-mirai-volunteer/pr-data
        path: pr-data
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Python環境をセットアップ
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: 依存関係をインストール
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: ディレクトリ構造を確認
      run: |
        echo "=== 現在のディレクトリ構造 ==="
        ls -la
        echo "=== pr-dataディレクトリ ==="
        ls -la pr-data/
        echo "=== PRデータファイル数 ==="
        find pr-data/prs -name "*.json" | wc -l
    
    - name: Devin統計分析を実行
      run: |
        echo "=== Devin統計分析開始 ==="
        python scripts/generate_daily_report.py
      env:
        PYTHONPATH: ${{ github.workspace }}
    
    - name: レポートファイルを確認
      run: |
        echo "=== 生成されたレポート ==="
        ls -la reports/
        if [ -f reports/daily_report_$(date +%Y%m%d).md ]; then
          echo "=== 日次レポート内容（先頭50行） ==="
          head -50 reports/daily_report_$(date +%Y%m%d).md
        fi
    
    - name: レポートをコミット
      run: |
        git config --local user.email "devin-ai-integration[bot]@users.noreply.github.com"
        git config --local user.name "Devin AI"
        
        # 変更があるかチェック
        if [ -n "$(git status --porcelain)" ]; then
          git add reports/
          git commit -m "📊 Devin統計日次レポート更新 $(date +%Y-%m-%d)"
          git push
          echo "✅ レポートをコミットしました"
        else
          echo "ℹ️ 変更がないため、コミットをスキップしました"
        fi
    
    - name: 統計サマリーを出力
      run: |
        if [ -f reports/analysis_$(date +%Y%m%d).json ]; then
          echo "=== 統計サマリー ==="
          python -c "
import json
with open('reports/analysis_$(date +%Y%m%d).json', 'r') as f:
    data = json.load(f)
    summary = data.get('summary', {})
    success = data.get('success_patterns', {})
    print(f'📊 総Devin PR数: {summary.get(\"total_prs\", 0)}件')
    print(f'✅ マージ済み: {success.get(\"merged_prs\", 0)}件')
    print(f'📈 成功率: {success.get(\"success_rate\", 0):.1f}%')
"
        fi
    
    - name: エラー時の詳細ログ
      if: failure()
      run: |
        echo "=== エラー詳細情報 ==="
        echo "Python version:"
        python --version
        echo "Installed packages:"
        pip list
        echo "Environment variables:"
        env | grep -E "(GITHUB|DEVIN)" | sort
        echo "Working directory:"
        pwd
        echo "Directory contents:"
        find . -type f -name "*.py" | head -10
